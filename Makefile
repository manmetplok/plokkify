#############################################################################
# Makefile for building: qtify
# Generated by qmake (2.01a) (Qt 4.7.0) on: Wed Apr 6 20:57:12 2011
# Project:  qtify.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile qtify.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -Ilibspotify/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -L/home/jorrit/git/plokkify/libspotify/lib/ -lspotify -lpulse -lpulse-simple -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		spwrap.cpp \
		spcallback.cpp \
		spmain.cpp \
		sprootlist.cpp \
		spsession.cpp \
		spplaylist.cpp \
		sptoplist.cpp \
		spimage.cpp \
		queue.cpp \
		spsearch.cpp \
		audio.cpp \
		playback.cpp \
		mnenc.cpp moc_mainwindow.cpp \
		moc_spwrap.cpp \
		moc_spcallback.cpp \
		moc_spmain.cpp \
		moc_playback.cpp \
		qrc_resources.cpp
OBJECTS       = main.o \
		mainwindow.o \
		spwrap.o \
		spcallback.o \
		spmain.o \
		sprootlist.o \
		spsession.o \
		spplaylist.o \
		sptoplist.o \
		spimage.o \
		queue.o \
		spsearch.o \
		audio.o \
		playback.o \
		mnenc.o \
		moc_mainwindow.o \
		moc_spwrap.o \
		moc_spcallback.o \
		moc_spmain.o \
		moc_playback.o \
		qrc_resources.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		qtify.pro
QMAKE_TARGET  = qtify
DESTDIR       = 
TARGET        = qtify

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: qtify.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile qtify.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile qtify.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/qtify1.0.0 || $(MKDIR) .tmp/qtify1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/qtify1.0.0/ && $(COPY_FILE) --parents mainwindow.h spwrap.h spcallback.h spotify_cpp.h spmain.h sprootlist.h spsession.h spplaylist.h sptoplist.h spimage.h queue.h spsearch.h audio.h playback.h mnenc.h .tmp/qtify1.0.0/ && $(COPY_FILE) --parents resources.qrc .tmp/qtify1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp spwrap.cpp spcallback.cpp spmain.cpp sprootlist.cpp spsession.cpp spplaylist.cpp sptoplist.cpp spimage.cpp queue.cpp spsearch.cpp audio.cpp playback.cpp mnenc.cpp .tmp/qtify1.0.0/ && $(COPY_FILE) --parents mainwindow.ui .tmp/qtify1.0.0/ && (cd `dirname .tmp/qtify1.0.0` && $(TAR) qtify1.0.0.tar qtify1.0.0 && $(COMPRESS) qtify1.0.0.tar) && $(MOVE) `dirname .tmp/qtify1.0.0`/qtify1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/qtify1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_spwrap.cpp moc_spcallback.cpp moc_spmain.cpp moc_playback.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_spwrap.cpp moc_spcallback.cpp moc_spmain.cpp moc_playback.cpp
moc_mainwindow.cpp: spwrap.h \
		spotify_cpp.h \
		libspotify/include/libspotify/api.h \
		appkey.h \
		spmain.h \
		queue.h \
		playback.h \
		audio.h \
		mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_spwrap.cpp: spotify_cpp.h \
		libspotify/include/libspotify/api.h \
		appkey.h \
		spmain.h \
		queue.h \
		playback.h \
		audio.h \
		spwrap.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) spwrap.h -o moc_spwrap.cpp

moc_spcallback.cpp: spotify_cpp.h \
		libspotify/include/libspotify/api.h \
		audio.h \
		spcallback.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) spcallback.h -o moc_spcallback.cpp

moc_spmain.cpp: spotify_cpp.h \
		libspotify/include/libspotify/api.h \
		spmain.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) spmain.h -o moc_spmain.cpp

moc_playback.cpp: audio.h \
		playback.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) playback.h -o moc_playback.cpp

compiler_rcc_make_all: qrc_resources.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_resources.cpp
qrc_resources.cpp: resources.qrc \
		res/qtify.png \
		res/rating_2.png \
		res/shuffleoff.png \
		res/next.png \
		res/rating_1.png \
		res/rating_4.png \
		res/rating_3.png \
		res/prev.png \
		res/play.png \
		res/rating_5.png \
		res/pause.png \
		res/shuffleon.png \
		icons/qtify.png
	/usr/bin/rcc -name resources resources.qrc -o qrc_resources.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic-qt4 mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		spwrap.h \
		spotify_cpp.h \
		libspotify/include/libspotify/api.h \
		appkey.h \
		spmain.h \
		queue.h \
		playback.h \
		audio.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		spwrap.h \
		spotify_cpp.h \
		libspotify/include/libspotify/api.h \
		appkey.h \
		spmain.h \
		queue.h \
		playback.h \
		audio.h \
		ui_mainwindow.h \
		spcallback.h \
		sptoplist.h \
		spimage.h \
		mnenc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

spwrap.o: spwrap.cpp spcallback.h \
		spotify_cpp.h \
		libspotify/include/libspotify/api.h \
		audio.h \
		spsession.h \
		spwrap.h \
		appkey.h \
		spmain.h \
		queue.h \
		playback.h \
		sprootlist.h \
		spplaylist.h \
		sptoplist.h \
		spimage.h \
		spsearch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spwrap.o spwrap.cpp

spcallback.o: spcallback.cpp spcallback.h \
		spotify_cpp.h \
		libspotify/include/libspotify/api.h \
		audio.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spcallback.o spcallback.cpp

spmain.o: spmain.cpp spmain.h \
		spotify_cpp.h \
		libspotify/include/libspotify/api.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spmain.o spmain.cpp

sprootlist.o: sprootlist.cpp sprootlist.h \
		spotify_cpp.h \
		libspotify/include/libspotify/api.h \
		spcallback.h \
		audio.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sprootlist.o sprootlist.cpp

spsession.o: spsession.cpp spsession.h \
		spotify_cpp.h \
		libspotify/include/libspotify/api.h \
		spcallback.h \
		audio.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spsession.o spsession.cpp

spplaylist.o: spplaylist.cpp spplaylist.h \
		spotify_cpp.h \
		libspotify/include/libspotify/api.h \
		spcallback.h \
		audio.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spplaylist.o spplaylist.cpp

sptoplist.o: sptoplist.cpp sptoplist.h \
		spotify_cpp.h \
		libspotify/include/libspotify/api.h \
		spcallback.h \
		audio.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sptoplist.o sptoplist.cpp

spimage.o: spimage.cpp spimage.h \
		spcallback.h \
		spotify_cpp.h \
		libspotify/include/libspotify/api.h \
		audio.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spimage.o spimage.cpp

queue.o: queue.cpp queue.h \
		spotify_cpp.h \
		libspotify/include/libspotify/api.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o queue.o queue.cpp

spsearch.o: spsearch.cpp spsearch.h \
		spotify_cpp.h \
		libspotify/include/libspotify/api.h \
		spcallback.h \
		audio.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spsearch.o spsearch.cpp

audio.o: audio.cpp audio.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o audio.o audio.cpp

playback.o: playback.cpp playback.h \
		audio.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o playback.o playback.cpp

mnenc.o: mnenc.cpp mnenc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mnenc.o mnenc.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_spwrap.o: moc_spwrap.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_spwrap.o moc_spwrap.cpp

moc_spcallback.o: moc_spcallback.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_spcallback.o moc_spcallback.cpp

moc_spmain.o: moc_spmain.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_spmain.o moc_spmain.cpp

moc_playback.o: moc_playback.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_playback.o moc_playback.cpp

qrc_resources.o: qrc_resources.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_resources.o qrc_resources.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

